// Code generated by go-enum DO NOT EDIT.
// Version: 0.5.3
// Revision: 8e2c93debfc66888870b2dfd86e70c79a70c920f
// Build Date: 2022-11-09T16:39:46Z
// Built By: goreleaser

package controller

import (
	"errors"
	"fmt"
)

const (
	// ActionInvalid is a Action of type invalid.
	ActionInvalid Action = "invalid"
	// ActionStorageUnitPing is a Action of type storage-unit-ping.
	ActionStorageUnitPing Action = "storage-unit-ping"
	// ActionStorageUnitNew is a Action of type storage-unit-new.
	ActionStorageUnitNew Action = "storage-unit-new"
	// ActionStorageUnitNewCard is a Action of type storage-unit-new-card.
	ActionStorageUnitNewCard Action = "storage-unit-new-card"
	// ActionStorageUnitDeleteCard is a Action of type storage-unit-delete-card.
	ActionStorageUnitDeleteCard Action = "storage-unit-delete-card"
	// ActionStorageUnitFetchCard is a Action of type storage-unit-fetch-card.
	ActionStorageUnitFetchCard Action = "storage-unit-fetch-card"
	// ActionUserSignupSourceMobile is a Action of type user-signup-source-mobile.
	ActionUserSignupSourceMobile Action = "user-signup-source-mobile"
	// ActionUserSignupSourceTerminal is a Action of type user-signup-source-terminal.
	ActionUserSignupSourceTerminal Action = "user-signup-source-terminal"
	// ActionUserFetchToken is a Action of type user-fetch-token.
	ActionUserFetchToken Action = "user-fetch-token"
	// ActionUserExistence is a Action of type user-existence.
	ActionUserExistence Action = "user-existence"
)

var ErrInvalidAction = errors.New("not a valid Action")

// String implements the Stringer interface.
func (x Action) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x Action) IsValid() bool {
	_, err := ParseAction(string(x))
	return err == nil
}

var _ActionValue = map[string]Action{
	"invalid":                     ActionInvalid,
	"storage-unit-ping":           ActionStorageUnitPing,
	"storage-unit-new":            ActionStorageUnitNew,
	"storage-unit-new-card":       ActionStorageUnitNewCard,
	"storage-unit-delete-card":    ActionStorageUnitDeleteCard,
	"storage-unit-fetch-card":     ActionStorageUnitFetchCard,
	"user-signup-source-mobile":   ActionUserSignupSourceMobile,
	"user-signup-source-terminal": ActionUserSignupSourceTerminal,
	"user-fetch-token":            ActionUserFetchToken,
	"user-existence":              ActionUserExistence,
}

// ParseAction attempts to convert a string to a Action.
func ParseAction(name string) (Action, error) {
	if x, ok := _ActionValue[name]; ok {
		return x, nil
	}
	return Action(""), fmt.Errorf("%s is %w", name, ErrInvalidAction)
}

// MarshalText implements the text marshaller method.
func (x Action) MarshalText() ([]byte, error) {
	return []byte(string(x)), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *Action) UnmarshalText(text []byte) error {
	tmp, err := ParseAction(string(text))
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
